// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	afero "github.com/spf13/afero"

	fs "io/fs"

	mock "github.com/stretchr/testify/mock"
)

// Filesystem is an autogenerated mock type for the Filesystem type
type Filesystem struct {
	mock.Mock
}

// Open provides a mock function with given fields: _a0
func (_m *Filesystem) Open(_a0 string) (afero.File, error) {
	ret := _m.Called(_a0)

	var r0 afero.File
	if rf, ok := ret.Get(0).(func(string) afero.File); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(afero.File)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Stat provides a mock function with given fields: _a0
func (_m *Filesystem) Stat(_a0 string) (fs.FileInfo, error) {
	ret := _m.Called(_a0)

	var r0 fs.FileInfo
	if rf, ok := ret.Get(0).(func(string) fs.FileInfo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(fs.FileInfo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
